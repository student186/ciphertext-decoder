#include "Ciphertext.h"
#include "Plaintext.h"
#include <iostream>

using namespace std;

int main() { 
    // parameter for Caesar cipher
    int shift = 5;
    // parameters for linear cipher
    int a = 3;
    int b = 9;
    // permutation alphabet used for monoalphabetic substitution cipher
    string permutation = "lwempqrstughivxybcdfzanojk";
    // parameter for Vigenere cipher
    string key = "key";
    string plaintext = "A random paragraph can also be an excellent way for a writer to tackle writers' block. Writing block can often happen due to being stuck with a current project that the writer is trying to complete. By inserting a completely random paragraph from which to begin, it can take down some of the issues that may have been causing the writers' block in the first place.";

    
    cout << "Plaintext:\n" << plaintext << endl <<endl << endl;


    cout << "Encryption:" << endl;
    Plaintext p1(plaintext);
    cout << "[Encrypting plaintext using Caesar cipher with a shift of: " << shift << "]" << endl;
    p1.ccEncoder(shift);
    string cTextToDecrypt1 = p1.getCText();
    cout << cTextToDecrypt1 << endl << endl;
    
    cout << "[Encrypting plaintext using linear cipher with parameters: a = " << a << ", b = " << b << "]" << endl;
    p1.lcEncoder(a,b);
    string cTextToDecrypt2 = p1.getCText();
    cout << cTextToDecrypt2 << endl << endl;

    cout << "[Encrypting plaintext using monoalphabetic substitution cipher with permutation: " << permutation << "]" << endl;
    p1.mscEncoder(permutation);
    string cTextToDecrypt3 = p1.getCText();
    cout << cTextToDecrypt3 << endl << endl;
    
    cout << "[Encrypting plaintext using Vigenere cipher with key: " << key << "]" << endl;
    p1.vcEncoder(key);
    string cTextToDecrypt4 = p1.getCText();
    cout << cTextToDecrypt4 << endl << endl << endl;   
    

    cout << "Decryption:" << endl;
    Ciphertext c1(cTextToDecrypt1);
    Ciphertext c2(cTextToDecrypt2);
    Ciphertext c3(cTextToDecrypt3);
    Ciphertext c4(cTextToDecrypt4, "keys.txt", "dictionary.txt");

    cout << "[Decrypting ciphertext generated by Caesar cipher with a shift of: " << shift << "]" << endl;
    c1.ccDecoder(shift);
    c1.display();
    cout << endl;

    cout << "[Decrypting ciphertext generated by linear cipher with parameters: a = " << a << ", b = " << b << "]" << endl;
    c2.lcDecoder(a,b);
    c2.display();
    cout << endl;

    cout << "[Decrypting ciphertext generated by monoalphabetic substitution cipher with permutation: " << permutation << "]" << endl;
    c3.mscDecoder2(permutation);
    c3.display();
    cout << endl;

    cout << "[Decrypting ciphertext generated by Vigenere cipher with unknown key]" << endl;
    c4.vcDecoder();
    cout << endl;


    return 0;
}
